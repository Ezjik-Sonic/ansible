---

# Copyright 2018 Brocade Communications Systems LLC.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may also obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: fc_switch_1
  gather_facts: False

  vars_files:
    - ../vars/fos_password.yml

  vars:
    vfid: -1
    port_name: "0/19"
    port_user_friendly_name: "port1_connect_to_target200"
    port_speed: "0"
    port_qos_mode: "False"
    host_name_on_port: host_eng_cc
    host_port_on_port: "{{hostvars.host_eng_cc.port_a}}"
    target_port_to_talk: "{{hostvars.target_200.port_a}}"
    auto_zone_prefix: "az__"
    auto_zone_postfix: "1"

  tasks:
  - name: run d-port on "{{port_name}}"
    m_port_op_run_d_port:
        switch_ip: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        vfid: "{{vfid}}"
        name: "{{port_name}}"
    register: d_port_result
  - debug: var=d_port_result
  - name: set the user friendly name to "{{port_user_friendly_name}}" for "{{port_name}}" if diag passed
    m_port_cfg_user_friendly_name:
        switch_ip: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        checkmode: "{{ansible_check_mode}}"
        vfid: "{{vfid}}"
        name: "{{port_name}}"
        user_friendly_name: "{{port_user_friendly_name}}"
        d_port_result: d_port_result["d_port_result"]
    when: d_port_result["d_port_result"] == "PASSED"
  - name: set speed of "{{port_name}}" to "{{port_speed}}" if diag passed
    m_port_cfg_speed:
        switch_ip: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        checkmode: "{{ansible_check_mode}}"
        vfid: "{{vfid}}"
        name: "{{port_name}}"
        speed: "{{port_speed}}"
    when: d_port_result["d_port_result"] == "PASSED"
  - name: set QoS on "{{port_name}}" to "{{port_qos_mode}}" if diag passed
    m_port_cfg_qos_enabled:
        switch_ip: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        checkmode: "{{ansible_check_mode}}"
        vfid: "{{vfid}}"
        name: "{{port_name}}"
        mode: "{{port_qos_mode}}"
    when: d_port_result["d_port_result"] == "PASSED"
  - name: allow connection between "{{host_name_on_port}}" "{{host_port_on_port}}" <-> "{{target_port_to_talk}}" if diag passed
    m_zone_allow:
        zone_seed: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        checkmode: "{{ansible_check_mode}}"
        vfid: "{{vfid}}"
        zone_prefix: "{{auto_zone_prefix}}"
        host_name: "{{host_name_on_port}}"
        zone_postfix: "{{auto_zone_postfix}}"
        host_port: "{{host_port_on_port}}"
        target_port: "{{target_port_to_talk}}"
    when: d_port_result["d_port_result"] == "PASSED"
  - name: enable "{{port_name}}" if diag passed
    m_port_op_enable:
        switch_ip: "{{fos_ip_addr}}"
        user: "{{fos_user}}"
        password: "{{fos_password}}"
        checkmode: "{{ansible_check_mode}}"
        vfid: "{{vfid}}"
        name: "{{port_name}}"
    when: d_port_result["d_port_result"] == "PASSED"
